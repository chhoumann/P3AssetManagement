using AssetManagement.Models.AssetHolder;
using AssetManagement.Models.AssetRecord;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;

namespace AssetManagement.Models.Asset
{
    public abstract class Asset : IAsset
    {
        /// <summary>
        /// The asset's ID provided by the file from AAF.
        /// </summary>
        public string AssetId { get; set; }

        /// <summary>
        /// The internal asset database ID. 
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Mark ID as auto-generated by SQL database
        public string Id { get; private set; }

        public AssetOwnershipHandler Transfer { get; }

        public IAssetRecord LastAssetRecord => AssetRecords[AssetRecords.Count - 1];

        public DateTime LastChanged => LastAssetRecord.Timestamp;

        public IAssetHolder CurrentAssetHolder => LastAssetRecord.Holder;

        public List<IAssetRecord> AssetRecords { get; } = new List<IAssetRecord>();

        public Asset()
        {
            Transfer = new AssetOwnershipHandler(this);

            // The initial holder of an asset is the depot,
            // to make properties: LastAssetRecord, LastChanged and CurrentAssetHolder needs a record
            Transfer.ToDepot();
        }

        public Asset(string assetId) : this() => AssetId = assetId;
    }
}
