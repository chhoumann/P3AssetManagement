@inject NavigationManager NavigationManager
@using AssetManagement.Models.Asset
@using AssetManagement.Server.Shared;
@inject AssetService AssetService
@inject IJSRuntime JSRuntime
@namespace AssetManagement.Server.Components

@if (pageAssets == null)
{
    <p><em>Loading...</em></p>
}
else
{
<button class="btn" @onclick="() => AssetService.CreateNewAsset()">Add (test)</button>
    <table class="table">
        <thead>
            <tr>
                <th>Model</th>
                <th>Serienummer</th>
                <th>ID</th>
                <th>Ejer</th>
                <th>Brugernavn</th>
                <th>Sidst √Ündret</th>
                <th>PC-AD Status</th>
                <th>State</th>
                <th>Data</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Asset asset in pageAssets)
            {
                <tr>
                    <td>@asset.Model</td>
                    <td>@asset.SerialNumber</td>
                    <td>@asset.Id</td>
                    <td>@(asset.CurrentAssetHolder != null ? asset.CurrentAssetHolder.Label : "-")</td>
                    <td>@(asset.CurrentAssetHolder != null && asset.CurrentAssetHolder.Username != null ? asset.CurrentAssetHolder.Username : "-")</td>
                    <td>@asset.LastChanged.ToShortDateString()</td>
                    <td>Awaiting Imp.</td>
                    <td>@(asset.LastAssetRecord != null ? asset.LastAssetRecord.State.ToString() : "-")</td>
                    <td>
                        <NavLink class="nav-link" @onclick="() => NavigateToDetails(asset)" Match="NavLinkMatch.All">
                            <p class="detailsLink">üïµÔ∏è‚Äç‚ôÇÔ∏è Detaljer</p>
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <button disabled=@(navigator.PageIndex == 0) type="button" class="btn btn-secondary" @onclick="() => navigator.ChangePage(HorizontalDirection.Left)">Previous</button>
        <button disabled=@(navigator.PageIndex == navigator.NumPages - 1) type="button" class="btn btn-secondary" @onclick="() => navigator.ChangePage(HorizontalDirection.Right)">Next</button>
        <p>@(navigator.PageIndex + 1) / @navigator.NumPages</p>
    </div>
}

<style>
    .detailsLink {
        color:blue;
    }
    .detailsLink:hover{
        color:lightblue;
        cursor:pointer;
        text-decoration:underline;
    }

</style>